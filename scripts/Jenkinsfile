pipeline {
    agent any

    stages {

	stage ('Validate Java') {
 	    steps {
		sh """
		cd DynamicDisplays
		mvn -B -DskipTests clean validate
		"""
	    }
	}

	stage ('Validate scripts') {
 	    steps {
		sh """
		cd DynamicDisplays
		./checkAllScripts.sh
		"""
	    }
	}
	
	stage ('Build') {
 	    steps {
		sh """
		cd DynamicDisplays
		mvn -B -DskipTests clean compile
		""" 
	    }
	}
	
	stage ('Unit Tests') {
 	    steps {
		sh """
		cd DynamicDisplays
		mvn -B test
		"""
	    }
	}
	
	stage ('Rudimentary Run Test Linux') {
 	    steps {
		sh """
		cd DynamicDisplays
		set +x		
		. ./setupEnvironment.sh
		set -x
		echo "----- Testing that certain classes run ----"
		myArray=( gov.fnal.ppd.dd.util.nonguiUtils.JavaVersion )
		myArray+=( gov.fnal.ppd.dd.util.nonguiUtils.PerformanceMonitor )
		myArray+=( gov.fnal.ppd.dd.changer.ChannelCatalogFactory )
		myArray+=( gov.fnal.ppd.dd.channel.MapOfChannels )
		myArray+=( gov.fnal.ppd.dd.db.DisplayUtilDatabase )
		myArray+=( gov.fnal.ppd.dd.db.GetDefaultContentForDisplay )
		myArray+=( gov.fnal.ppd.dd.util.specific.HasChannelSelector )
		myArray+=( gov.fnal.ppd.dd.util.specific.IsDisplayNode )
		myArray+=( gov.fnal.ppd.dd.util.specific.SummarizeContentHistory )
		myArray+=( gov.fnal.ppd.dd.util.specific.TranslateGITHashCodeToDate )
		myArray+=( gov.fnal.ppd.security.CheckHostName )
		for i in ${myArray[@]} ; do 
		    echo
		    echo "======================================================================"
		    echo "========== $i"
		    echo "      $i"
		    java $i

		done		    

		echo "Testing that the PropertiesFile class runs"
		cp -p ../config/config.properties ../config/config.properties_hold
		java gov.fnal.ppd.dd.util.nonguiUtils.PropertiesFile
		ls -l ../config/config.properties ../config/config.properties_hold
		rm ../config/config.properties 
		mv ../config/config.properties_hold ../config/config.properties
		"""
	    }
	}
    }
 }